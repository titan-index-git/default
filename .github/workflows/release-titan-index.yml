name: "Build & Release Titan Index"

on:
  workflow_dispatch:
    inputs:
      build_ref:
        description: "Branch or tag to build"
        required: true
        default: "download"
      tag:
        description: "Release tag (leave blank to auto-generate)"
        required: false
        default: ""
      release_name:
        description: "Release name (leave blank to auto-generate)"
        required: false
        default: ""
      zip_path:
        description: "ZIP filename (leave blank to auto-generate)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout selected ref"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.build_ref }}
          fetch-depth: 0

      - name: "Compute parameters"
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          # Inputs (may be empty)
          IN_TAG="${{ inputs.tag }}"
          IN_NAME="${{ inputs.release_name }}"
          IN_ZIP="${{ inputs.zip_path }}"

          # Auto-fill when blank
          if [ -z "$IN_TAG" ]; then IN_TAG="v-${GITHUB_RUN_NUMBER}"; fi
          if [ -z "$IN_NAME" ]; then IN_NAME="Titan Index - run ${GITHUB_RUN_NUMBER}"; fi
          if [ -z "$IN_ZIP" ]; then IN_ZIP="titan-index-${GITHUB_RUN_NUMBER}.zip"; fi

          echo "tag=$IN_TAG"   >> "$GITHUB_OUTPUT"
          echo "name=$IN_NAME" >> "$GITHUB_OUTPUT"
          echo "zip=$IN_ZIP"   >> "$GITHUB_OUTPUT"

          echo "Using tag: $IN_TAG"
          echo "Using name: $IN_NAME"
          echo "Using zip:  $IN_ZIP"

      - name: "Debug - show files"
        shell: bash
        run: |
          set -euxo pipefail
          echo "HEAD ref: ${{ inputs.build_ref }}"
          pwd
          ls -lah
          echo "---- find . (3 levels) ----"
          find . -maxdepth 3 -type f -print

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: "Build ZIP (script if present, else static site)"
        shell: bash
        run: |
          set -euxo pipefail
          ZIP="${{ steps.vars.outputs.zip }}"

          if [ -f tools/refresh_titan_index.py ]; then
            echo "Using tools/refresh_titan_index.py to build ${ZIP}"
            python tools/refresh_titan_index.py "${ZIP}"
          else
            echo "No tools/refresh_titan_index.py found â€” packaging static site."
            test -f index.html || { echo "::error::index.html not found at repo root on ref '${{ inputs.build_ref }}'"; exit 1; }
            # Zip typical site files; ignore CI folders if missing
            zip -r "${ZIP}" index.html assets data README.md 2>/dev/null || true
            test -f "${ZIP}" || { echo "::error::Failed to create ${ZIP}"; exit 1; }
          fi

          echo "Built $(ls -lh "${ZIP}")"

      - name: "Attach ZIP to run (artifact)"
        uses: actions/upload-artifact@v4
        with:
          name: titan-index-zip
          path: ${{ steps.vars.outputs.zip }}

      - name: "Create/Update GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.name }}
          make_latest: true
          overwrite: true
          fail_on_unmatched_files: true
          files: ${{ steps.vars.outputs.zip }}

